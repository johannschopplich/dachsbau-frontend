/*
 * Base styles
 *
 * Adapted from https://github.com/unocss/unocss/tree/main/packages/preset-typography
 */
.prose {
  --un-prose-space-y: 1rem;
  --un-prose-font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    'Liberation Mono', 'Courier New', monospace;
  --un-prose-borders: currentColor;
}

.prose > :where(*:not(:last-child)):not(:where(.not-prose, .not-prose *)) {
  margin-bottom: calc(1 * var(--un-prose-space-y));
}

.prose
  :where(
    h1:not(:first-child),
    h2:not(:first-child),
    h3:not(:first-child),
    h4:not(:first-child),
    h5:not(:first-child),
    h6:not(:first-child)
  ):not(:where(.not-prose, .not-prose *)) {
  margin-top: calc(2 * var(--un-prose-space-y));
}

.prose :where(h1, h2, h3, h4, h5, h6):not(:where(.not-prose, .not-prose *)) {
  color: var(--un-prose-headings);
  font-weight: 600;
  line-height: 1.25;
}

.prose :where(a):not(:where(.not-prose, .not-prose *)) {
  color: var(--un-prose-links, currentColor);
}

.prose :where(a code):not(:where(.not-prose, .not-prose *)) {
  color: var(--un-prose-links, currentColor);
}

.prose :where(p, ul, ol, pre):not(:where(.not-prose, .not-prose *)) {
  line-height: 1.5;
}

.prose :where(blockquote):not(:where(.not-prose, .not-prose *)) {
  font-style: italic;
  border-left: 0.25em solid var(--un-prose-borders);
  padding-left: 1em;
}

/*
 * Taking 16px as a base, we scale h1, h2, h3, and h4 like
 * 16 (base) > 18 (h4) > 22 (h3) > 28 (h2) > 36 (h1)
 */
.prose :where(h1):not(:where(.not-prose, .not-prose *)) {
  font-size: 2.25em;
}

.prose :where(h2):not(:where(.not-prose, .not-prose *)) {
  font-size: 1.75em;
}

.prose :where(h3):not(:where(.not-prose, .not-prose *)) {
  font-size: 1.375em;
}

.prose :where(h4):not(:where(.not-prose, .not-prose *)) {
  font-size: 1.125em;
}

.prose :where(figcaption):not(:where(.not-prose, .not-prose *)) {
  color: var(--un-prose-captions);
  font-size: 0.875em;
  line-height: 1.25;
  margin-top: 0.25rem;
}

.prose :where(code):not(:where(.not-prose, .not-prose *)) {
  color: var(--un-prose-code);
  font-size: 0.875em;
  font-weight: 600;
  font-family: var(--un-prose-font-mono);
}

.prose :where(:not(pre) > code):not(:where(.not-prose, .not-prose *))::before,
.prose :where(:not(pre) > code):not(:where(.not-prose, .not-prose *))::after {
  content: '`';
}

.prose :where(pre):not(:where(.not-prose, .not-prose *)) {
  padding: 1.25rem 1.5rem;
  overflow-x: auto;
  border-radius: 0.375rem;
}

.prose :where(pre, code):not(:where(.not-prose, .not-prose *)) {
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  -moz-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  hyphens: none;
  background: transparent;
}

.prose :where(pre code):not(:where(.not-prose, .not-prose *)) {
  font-weight: inherit;
}

.prose :where(ol, ul):not(:where(.not-prose, .not-prose *)) {
  padding-left: 1.25em;
}

.prose :where(ol):not(:where(.not-prose, .not-prose *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where(.not-prose, .not-prose *)) {
  list-style-type: disc;
}

.prose :where(ol > li):not(:where(.not-prose, .not-prose *))::marker,
.prose :where(ul > li):not(:where(.not-prose, .not-prose *))::marker,
.prose :where(summary):not(:where(.not-prose, .not-prose *))::marker {
  color: var(--un-prose-lists, currentColor);
}

.prose :where(hr):not(:where(.not-prose, .not-prose *)) {
  height: 0;
  margin: calc(2 * var(--un-prose-space-y)) 0;
  border: 1px solid var(--un-prose-hr, currentColor);
}

.prose :where(table):not(:where(.not-prose, .not-prose *)) {
  display: block;
  margin: 1em 0;
  border-collapse: collapse;
  overflow-x: auto;
}

.prose :where(tr:nth-child(2n)):not(:where(.not-prose, .not-prose *)) {
  background: var(--un-prose-bg-soft);
}

.prose :where(td, th):not(:where(.not-prose, .not-prose *)) {
  border: 1px solid var(--un-prose-borders);
  padding: 0.625em 1em;
}

.prose :where(abbr):not(:where(.not-prose, .not-prose *)) {
  cursor: help;
}

.prose :where(kbd):not(:where(.not-prose, .not-prose *)) {
  color: var(--un-prose-code);
  border: 1px solid;
  font-size: 0.875em;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
}

.prose :where(details):not(:where(.not-prose, .not-prose *)) {
  margin: 1em 0;
  padding: 1.25rem 1.5rem;
  background: var(--un-prose-bg-soft);
}

.prose :where(summary):not(:where(.not-prose, .not-prose *)) {
  cursor: pointer;
  font-weight: 600;
}

/*
 * Custom styles
 */
.prose :where(h1, h2, h3, h4, h5, h6):not(:where(.not-prose, .not-prose *)) {
  --at-apply: 'text-secondary-600 font-heading font-400';
}

.prose :where(a):not(:where(.not-prose, .not-prose *)) {
  --at-apply: 'decoration-primary-600';
  text-decoration-line: underline;
  text-decoration-thickness: var(--decoration-width);
  text-underline-offset: var(--decoration-width);
}

.prose :where(a:hover):not(:where(.not-prose, .not-prose *)) {
  --at-apply: 'text-primary-500 decoration-current';
}

.prose :where(a code):not(:where(.not-prose, .not-prose *)) {
  --at-apply: 'text-primary-500';
  text-decoration-line: none;
}

.prose :where(figure.emphasized):not(:where(.not-prose, .not-prose *)) {
  --at-apply: 'md:mx-[-2rem]';
}

.prose :where(figure.pulled-left):not(:where(.not-prose, .not-prose *)) {
  --at-apply: 'sm:float-left sm:mr-[1.25rem] sm:w-[45%] lg:ml-[-20%]';
}

.prose :where(figure.pulled-right):not(:where(.not-prose, .not-prose *)) {
  --at-apply: 'sm:float-right sm:ml-[1.25rem] sm:w-[45%] lg:mr-[-20%]';
}

.prose :where(figcaption):not(:where(.not-prose, .not-prose *)) {
  --at-apply: 'text-secondary-700 text-size-[0.75em] mt-0 text-right';
}
